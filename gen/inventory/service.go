// Code generated by goa v3.12.4, DO NOT EDIT.
//
// inventory service
//
// Command:
// $ goa gen game-service/design

package inventory

import (
	"context"
)

// The inventory service is the service for managing character inventories
type Service interface {
	// Show the inventory for a character as a list of item IDs
	Show(context.Context, *ShowPayload) (res []string, err error)
	// Add an item ID to a character's inventory
	Add(context.Context, *AddPayload) (err error)
	// Remove an item ID from a character's inventory
	Remove(context.Context, *RemovePayload) (err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "inventory"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [3]string{"show", "add", "remove"}

// AddPayload is the payload type of the inventory service add method.
type AddPayload struct {
	// ID of the character
	ID string
	// ID of the item
	ItemID string
}

// NotFound is the type returned when attempting to show, update or delete an
// API object that does not exist
type NotFound struct {
	// not found
	Message string
	// ID of missing item
	ID string
}

// RemovePayload is the payload type of the inventory service remove method.
type RemovePayload struct {
	// ID of the character
	ID string
	// ID of the item
	ItemID string
}

// ShowPayload is the payload type of the inventory service show method.
type ShowPayload struct {
	// ID of the character
	ID string
}

// Error returns an error description.
func (e *NotFound) Error() string {
	return "NotFound is the type returned when attempting to show, update or delete an API object that does not exist"
}

// ErrorName returns "NotFound".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e *NotFound) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "NotFound".
func (e *NotFound) GoaErrorName() string {
	return "not_found"
}
