// Code generated by goa v3.12.4, DO NOT EDIT.
//
// inventory gRPC client CLI support package
//
// Command:
// $ goa gen game-service/design

package client

import (
	"encoding/json"
	"fmt"
	inventorypb "game-service/gen/grpc/inventory/pb"
	inventory "game-service/gen/inventory"
)

// BuildShowPayload builds the payload for the inventory show endpoint from CLI
// flags.
func BuildShowPayload(inventoryShowMessage string) (*inventory.ShowPayload, error) {
	var err error
	var message inventorypb.ShowRequest
	{
		if inventoryShowMessage != "" {
			err = json.Unmarshal([]byte(inventoryShowMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"id\": \"Eum aperiam ut voluptatem sunt omnis.\"\n   }'")
			}
		}
	}
	v := &inventory.ShowPayload{
		ID: message.Id,
	}

	return v, nil
}

// BuildAddPayload builds the payload for the inventory add endpoint from CLI
// flags.
func BuildAddPayload(inventoryAddMessage string) (*inventory.AddPayload, error) {
	var err error
	var message inventorypb.AddRequest
	{
		if inventoryAddMessage != "" {
			err = json.Unmarshal([]byte(inventoryAddMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"id\": \"Suscipit fugit consequatur voluptatum.\",\n      \"item_id\": \"Consequatur quisquam impedit.\"\n   }'")
			}
		}
	}
	v := &inventory.AddPayload{
		ID:     message.Id,
		ItemID: message.ItemId,
	}

	return v, nil
}

// BuildRemovePayload builds the payload for the inventory remove endpoint from
// CLI flags.
func BuildRemovePayload(inventoryRemoveMessage string) (*inventory.RemovePayload, error) {
	var err error
	var message inventorypb.RemoveRequest
	{
		if inventoryRemoveMessage != "" {
			err = json.Unmarshal([]byte(inventoryRemoveMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"id\": \"Molestiae eos totam quo totam nemo.\",\n      \"item_id\": \"Voluptatem praesentium qui.\"\n   }'")
			}
		}
	}
	v := &inventory.RemovePayload{
		ID:     message.Id,
		ItemID: message.ItemId,
	}

	return v, nil
}
