// Code generated by goa v3.12.4, DO NOT EDIT.
//
// inventory gRPC server encoders and decoders
//
// Command:
// $ goa gen game-service/design

package server

import (
	"context"
	inventorypb "game-service/gen/grpc/inventory/pb"
	inventory "game-service/gen/inventory"

	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc/metadata"
)

// EncodeShowResponse encodes responses from the "inventory" service "show"
// endpoint.
func EncodeShowResponse(ctx context.Context, v any, hdr, trlr *metadata.MD) (any, error) {
	result, ok := v.([]string)
	if !ok {
		return nil, goagrpc.ErrInvalidType("inventory", "show", "[]string", v)
	}
	resp := NewProtoShowResponse(result)
	return resp, nil
}

// DecodeShowRequest decodes requests sent to "inventory" service "show"
// endpoint.
func DecodeShowRequest(ctx context.Context, v any, md metadata.MD) (any, error) {
	var (
		message *inventorypb.ShowRequest
		ok      bool
	)
	{
		if message, ok = v.(*inventorypb.ShowRequest); !ok {
			return nil, goagrpc.ErrInvalidType("inventory", "show", "*inventorypb.ShowRequest", v)
		}
	}
	var payload *inventory.ShowPayload
	{
		payload = NewShowPayload(message)
	}
	return payload, nil
}

// EncodeAddResponse encodes responses from the "inventory" service "add"
// endpoint.
func EncodeAddResponse(ctx context.Context, v any, hdr, trlr *metadata.MD) (any, error) {
	resp := NewProtoAddResponse()
	return resp, nil
}

// DecodeAddRequest decodes requests sent to "inventory" service "add" endpoint.
func DecodeAddRequest(ctx context.Context, v any, md metadata.MD) (any, error) {
	var (
		message *inventorypb.AddRequest
		ok      bool
	)
	{
		if message, ok = v.(*inventorypb.AddRequest); !ok {
			return nil, goagrpc.ErrInvalidType("inventory", "add", "*inventorypb.AddRequest", v)
		}
	}
	var payload *inventory.AddPayload
	{
		payload = NewAddPayload(message)
	}
	return payload, nil
}

// EncodeRemoveResponse encodes responses from the "inventory" service "remove"
// endpoint.
func EncodeRemoveResponse(ctx context.Context, v any, hdr, trlr *metadata.MD) (any, error) {
	resp := NewProtoRemoveResponse()
	return resp, nil
}

// DecodeRemoveRequest decodes requests sent to "inventory" service "remove"
// endpoint.
func DecodeRemoveRequest(ctx context.Context, v any, md metadata.MD) (any, error) {
	var (
		message *inventorypb.RemoveRequest
		ok      bool
	)
	{
		if message, ok = v.(*inventorypb.RemoveRequest); !ok {
			return nil, goagrpc.ErrInvalidType("inventory", "remove", "*inventorypb.RemoveRequest", v)
		}
	}
	var payload *inventory.RemovePayload
	{
		payload = NewRemovePayload(message)
	}
	return payload, nil
}
