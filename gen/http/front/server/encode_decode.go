// Code generated by goa v3.12.4, DO NOT EDIT.
//
// front HTTP server encoders and decoders
//
// Command:
// $ goa gen game-service/design

package server

import (
	"context"
	frontviews "game-service/gen/front/views"
	"net/http"

	goahttp "goa.design/goa/v3/http"
)

// EncodeListItemsResponse returns an encoder for responses returned by the
// front list-items endpoint.
func EncodeListItemsResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) func(context.Context, http.ResponseWriter, any) error {
	return func(ctx context.Context, w http.ResponseWriter, v any) error {
		res := v.(frontviews.StoredItemCollection)
		w.Header().Set("goa-view", res.View)
		enc := encoder(ctx, w)
		var body any
		switch res.View {
		case "default", "":
			body = NewStoredItemResponseCollection(res.Projected)
		case "tiny":
			body = NewStoredItemResponseTinyCollection(res.Projected)
		}
		w.WriteHeader(http.StatusOK)
		return enc.Encode(body)
	}
}

// marshalFrontviewsStoredItemViewToStoredItemResponse builds a value of type
// *StoredItemResponse from a value of type *frontviews.StoredItemView.
func marshalFrontviewsStoredItemViewToStoredItemResponse(v *frontviews.StoredItemView) *StoredItemResponse {
	res := &StoredItemResponse{
		ID:          *v.ID,
		Name:        *v.Name,
		Description: v.Description,
		Damage:      *v.Damage,
		Healing:     *v.Healing,
		Protection:  *v.Protection,
	}

	return res
}

// marshalFrontviewsStoredItemViewToStoredItemResponseTiny builds a value of
// type *StoredItemResponseTiny from a value of type *frontviews.StoredItemView.
func marshalFrontviewsStoredItemViewToStoredItemResponseTiny(v *frontviews.StoredItemView) *StoredItemResponseTiny {
	res := &StoredItemResponseTiny{
		ID:   *v.ID,
		Name: *v.Name,
	}

	return res
}
