openapi: 3.0.3
info:
    title: Game Service
    description: Service for a multiplayer game
    version: "1.0"
servers:
    - url: http://localhost:8000
paths:
    /back/characters:
        get:
            tags:
                - character
            summary: list character
            description: List all characters
            operationId: character#list
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StoredCharacterResponseCollection'
                            example:
                                - description: A grizzled wizard with a penchant for mayhem and mead
                                  experience: 91154
                                  health: 1054
                                  id: 123abc
                                  name: Arvish the Wise
                                - description: A grizzled wizard with a penchant for mayhem and mead
                                  experience: 91154
                                  health: 1054
                                  id: 123abc
                                  name: Arvish the Wise
        post:
            tags:
                - character
            summary: add character
            description: Add new character and return its ID
            operationId: character#add
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddRequestBody'
                        example:
                            description: A grizzled wizard with a penchant for mayhem and mead
                            experience: 36060
                            health: 1852
                            name: Arvish the Wise
            responses:
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Quia nobis.
                            example: Pariatur quis temporibus consequatur numquam iste dolores.
                "409":
                    description: 'name_taken: name is taken'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NameTaken'
                            example:
                                message: Magni distinctio ut.
                                name: Nisi cumque voluptas.
    /back/characters/{id}:
        delete:
            tags:
                - character
            summary: remove character
            description: Remove a character
            operationId: character#remove
            parameters:
                - name: id
                  in: path
                  description: ID of character to remove
                  required: true
                  schema:
                    type: string
                    description: ID of character to remove
                    example: Ea ducimus esse.
                  example: Et velit velit.
            responses:
                "204":
                    description: No Content response.
                "404":
                    description: 'not_found: character not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFound'
                            example:
                                id: Aut vero velit eos quaerat.
                                message: Consequatur quia harum.
        get:
            tags:
                - character
            summary: show character
            description: Show character by ID
            operationId: character#show
            parameters:
                - name: view
                  in: query
                  description: View to render
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: View to render
                    example: tiny
                    enum:
                        - default
                        - tiny
                  example: tiny
                - name: id
                  in: path
                  description: ID of character to show
                  required: true
                  schema:
                    type: string
                    description: ID of character to show
                    example: Ut quia vero velit.
                  example: Laudantium non alias aliquam.
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StoredCharacter'
                            example:
                                description: A grizzled wizard with a penchant for mayhem and mead
                                experience: 49749
                                health: 1257
                                id: 123abc
                                name: Arvish the Wise
                "404":
                    description: 'not_found: character not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFound'
                            example:
                                id: Dolorem veritatis et ipsum.
                                message: Voluptas quis delectus natus.
        put:
            tags:
                - character
            summary: update character
            description: Update a character with the given ID
            operationId: character#update
            parameters:
                - name: id
                  in: path
                  description: ID of the character to be updated
                  required: true
                  schema:
                    type: string
                    description: ID of the character to be updated
                    example: Qui tempore qui qui.
                  example: Cupiditate deserunt id delectus ratione hic quo.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateRequestBody'
                        example:
                            character:
                                description: A grizzled wizard with a penchant for mayhem and mead
                                experience: 26032
                                health: 786
                                name: Arvish the Wise
            responses:
                "204":
                    description: No Content response.
                "404":
                    description: 'not_found: character not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFound'
                            example:
                                id: Velit facilis.
                                message: Iure doloribus architecto.
                "409":
                    description: 'name_taken: name is taken'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NameTaken'
                            example:
                                message: Officia nisi minima tempora deleniti.
                                name: Dignissimos voluptatem ipsam quos id saepe.
    /back/inventory:
        delete:
            tags:
                - inventory
            summary: remove inventory
            description: Remove an item ID from a character's inventory
            operationId: inventory#remove
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddRequestBody2'
                        example:
                            id: Optio mollitia.
                            item_id: Harum autem ipsam ratione atque voluptatibus.
            responses:
                "204":
                    description: No Content response.
                "404":
                    description: 'not_found: Character or item not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFound'
                            example:
                                id: Consequatur sunt doloremque sed et quis.
                                message: Et aut odit.
        post:
            tags:
                - inventory
            summary: add inventory
            description: Add an item ID to a character's inventory
            operationId: inventory#add
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddRequestBody2'
                        example:
                            id: Est doloribus sequi qui animi in quia.
                            item_id: Voluptas et non.
            responses:
                "201":
                    description: Created response.
    /back/inventory/{id}:
        get:
            tags:
                - inventory
            summary: show inventory
            description: Show the inventory for a character as a list of item IDs
            operationId: inventory#show
            parameters:
                - name: id
                  in: path
                  description: ID of the character
                  required: true
                  schema:
                    type: string
                    description: ID of the character
                    example: Qui voluptatem eligendi.
                  example: Dolorum earum quaerat quo ipsa laudantium voluptatibus.
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                                    example: Ut similique minus.
                                example:
                                    - Et id necessitatibus odit tempora labore.
                                    - Sed nam nostrum voluptatem.
                                    - Animi omnis ratione laborum eius ut quis.
                            example:
                                - Voluptate vitae dolores est est.
                                - Quia sed cum.
                                - Non dolor maiores.
                                - Dolores voluptatem totam dicta delectus repudiandae.
                "404":
                    description: 'not_found: Character not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFound'
                            example:
                                id: Rerum provident fugit perspiciatis aut odio dolor.
                                message: Voluptatem voluptas quam facere qui maiores vitae.
    /back/items:
        get:
            tags:
                - item
            summary: list item
            description: List all items
            operationId: item#list
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StoredItemResponseCollection'
                            example:
                                - damage: 165
                                  description: A magnificent sword which grants the bearer +2 wisdom
                                  healing: 11
                                  id: 123abc
                                  name: Sword of Wisdom
                                  protection: 2
                                - damage: 165
                                  description: A magnificent sword which grants the bearer +2 wisdom
                                  healing: 11
                                  id: 123abc
                                  name: Sword of Wisdom
                                  protection: 2
                                - damage: 165
                                  description: A magnificent sword which grants the bearer +2 wisdom
                                  healing: 11
                                  id: 123abc
                                  name: Sword of Wisdom
                                  protection: 2
        post:
            tags:
                - item
            summary: add item
            description: Add new item and return its ID
            operationId: item#add
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddRequestBody3'
                        example:
                            damage: 149
                            description: A magnificent sword which grants the bearer +2 wisdom
                            healing: 52
                            name: Sword of Wisdom
                            protection: 17
            responses:
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Eligendi hic molestias cupiditate.
                            example: Totam porro aut deleniti.
                "409":
                    description: 'name_taken: name is taken'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NameTaken'
                            example:
                                message: Ducimus quod.
                                name: Amet praesentium atque quisquam occaecati.
    /back/items/{id}:
        delete:
            tags:
                - item
            summary: remove item
            description: Remove an item
            operationId: item#remove
            parameters:
                - name: id
                  in: path
                  description: ID of item to remove
                  required: true
                  schema:
                    type: string
                    description: ID of item to remove
                    example: Veritatis accusantium asperiores vero quis vel.
                  example: Et non ut quam aliquid.
            responses:
                "204":
                    description: No Content response.
                "404":
                    description: 'not_found: Item not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFound'
                            example:
                                id: Libero deleniti quo culpa.
                                message: Autem sed.
        get:
            tags:
                - item
            summary: show item
            description: Show item by ID
            operationId: item#show
            parameters:
                - name: view
                  in: query
                  description: View to render
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: View to render
                    example: tiny
                    enum:
                        - default
                        - tiny
                  example: default
                - name: id
                  in: path
                  description: ID of item to show
                  required: true
                  schema:
                    type: string
                    description: ID of item to show
                    example: Est quod est eaque ut sapiente occaecati.
                  example: Veritatis nulla ut.
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StoredItem'
                            example:
                                damage: 104
                                description: A magnificent sword which grants the bearer +2 wisdom
                                healing: 122
                                id: 123abc
                                name: Sword of Wisdom
                                protection: 17
                "404":
                    description: 'not_found: Item not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFound'
                            example:
                                id: Aut est fugiat.
                                message: Eum ratione accusamus quae atque accusantium.
        put:
            tags:
                - item
            summary: update item
            description: Update an item with the given ID
            operationId: item#update
            parameters:
                - name: id
                  in: path
                  description: ID of the item to be updated
                  required: true
                  schema:
                    type: string
                    description: ID of the item to be updated
                    example: Alias quia vel reiciendis rerum eius.
                  example: Delectus debitis pariatur animi laboriosam.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateRequestBody2'
                        example:
                            item:
                                damage: 99
                                description: A magnificent sword which grants the bearer +2 wisdom
                                healing: 57
                                name: Sword of Wisdom
                                protection: 17
            responses:
                "204":
                    description: No Content response.
                "404":
                    description: 'not_found: Item not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFound'
                            example:
                                id: Nam nostrum.
                                message: Et nemo voluptatibus eum excepturi error.
                "409":
                    description: 'name_taken: name is taken'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NameTaken'
                            example:
                                message: Doloribus voluptas.
                                name: Minima qui quia id animi vero.
    /items:
        get:
            tags:
                - front
            summary: list-items front
            description: List all items
            operationId: front#list-items
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StoredItemCollection'
                            example:
                                - damage: 36
                                  description: A magnificent sword which grants the bearer +2 wisdom
                                  healing: 130
                                  id: 123abc
                                  name: Sword of Wisdom
                                  protection: 15
                                - damage: 36
                                  description: A magnificent sword which grants the bearer +2 wisdom
                                  healing: 130
                                  id: 123abc
                                  name: Sword of Wisdom
                                  protection: 15
                                - damage: 36
                                  description: A magnificent sword which grants the bearer +2 wisdom
                                  healing: 130
                                  id: 123abc
                                  name: Sword of Wisdom
                                  protection: 15
                                - damage: 36
                                  description: A magnificent sword which grants the bearer +2 wisdom
                                  healing: 130
                                  id: 123abc
                                  name: Sword of Wisdom
                                  protection: 15
components:
    schemas:
        AddRequestBody:
            type: object
            properties:
                description:
                    type: string
                    description: Description of the character
                    example: A grizzled wizard with a penchant for mayhem and mead
                    maxLength: 2000
                experience:
                    type: integer
                    description: Amount of experience the character has
                    example: 92755
                    minimum: 0
                    maximum: 100000
                health:
                    type: integer
                    description: Amount of health the character has
                    example: 130
                    minimum: 0
                    maximum: 2000
                name:
                    type: string
                    description: Name of the character
                    example: Arvish the Wise
                    maxLength: 100
            example:
                description: A grizzled wizard with a penchant for mayhem and mead
                experience: 44618
                health: 1025
                name: Arvish the Wise
            required:
                - name
                - health
        AddRequestBody2:
            type: object
            properties:
                id:
                    type: string
                    description: ID of the character
                    example: Impedit sit sunt quasi quibusdam dolorem non.
                item_id:
                    type: string
                    description: ID of the item
                    example: Expedita fuga.
            example:
                id: Sit dolores.
                item_id: Omnis suscipit et provident vero ut.
            required:
                - id
                - item_id
        AddRequestBody3:
            type: object
            properties:
                damage:
                    type: integer
                    description: Amount of damage the item can do
                    example: 47
                    minimum: 0
                    maximum: 200
                description:
                    type: string
                    description: Description of item
                    example: A magnificent sword which grants the bearer +2 wisdom
                    maxLength: 2000
                healing:
                    type: integer
                    description: Amount of healing the item can provide
                    example: 12
                    minimum: 0
                    maximum: 200
                name:
                    type: string
                    description: Name of item
                    example: Sword of Wisdom
                    maxLength: 100
                protection:
                    type: integer
                    description: Amount of protection the item can provide
                    example: 10
                    minimum: 0
                    maximum: 20
            example:
                damage: 51
                description: A magnificent sword which grants the bearer +2 wisdom
                healing: 3
                name: Sword of Wisdom
                protection: 18
            required:
                - name
                - damage
                - healing
                - protection
        NameTaken:
            type: object
            properties:
                message:
                    type: string
                    description: name taken
                    example: Eum ratione a doloribus similique.
                name:
                    type: string
                    description: name that is not unique
                    example: Ut voluptatem accusamus alias mollitia quo.
            description: name is taken
            example:
                message: Cum dolorum.
                name: Est et qui molestiae quibusdam sunt.
            required:
                - message
                - name
        NotFound:
            type: object
            properties:
                id:
                    type: string
                    description: ID of missing item
                    example: Et excepturi.
                message:
                    type: string
                    description: not found
                    example: Odio culpa rerum veritatis.
            description: character not found
            example:
                id: Iste reiciendis.
                message: Eveniet magni numquam reiciendis debitis in possimus.
            required:
                - message
                - id
        StoredCharacter:
            type: object
            properties:
                description:
                    type: string
                    description: Description of the character
                    example: A grizzled wizard with a penchant for mayhem and mead
                    maxLength: 2000
                experience:
                    type: integer
                    description: Amount of experience the character has
                    example: 5401
                    minimum: 0
                    maximum: 100000
                health:
                    type: integer
                    description: Amount of health the character has
                    example: 632
                    minimum: 0
                    maximum: 2000
                id:
                    type: string
                    description: ID is the unique id of the character.
                    example: 123abc
                name:
                    type: string
                    description: Name of the character
                    example: Arvish the Wise
                    maxLength: 100
            example:
                description: A grizzled wizard with a penchant for mayhem and mead
                experience: 34508
                health: 1487
                id: 123abc
                name: Arvish the Wise
            required:
                - id
                - name
                - health
                - experience
        StoredCharacterResponse:
            type: object
            properties:
                description:
                    type: string
                    description: Description of the character
                    example: A grizzled wizard with a penchant for mayhem and mead
                    maxLength: 2000
                experience:
                    type: integer
                    description: Amount of experience the character has
                    example: 43628
                    minimum: 0
                    maximum: 100000
                health:
                    type: integer
                    description: Amount of health the character has
                    example: 1684
                    minimum: 0
                    maximum: 2000
                id:
                    type: string
                    description: ID is the unique id of the character.
                    example: 123abc
                name:
                    type: string
                    description: Name of the character
                    example: Arvish the Wise
                    maxLength: 100
            description: A StoredCharacter describes an character stored with an ID (default view)
            example:
                description: A grizzled wizard with a penchant for mayhem and mead
                experience: 10595
                health: 1238
                id: 123abc
                name: Arvish the Wise
            required:
                - id
                - name
                - health
                - experience
        StoredCharacterResponseCollection:
            type: array
            items:
                $ref: '#/components/schemas/StoredCharacterResponse'
            description: ListResponseBody is the result type for an array of StoredCharacterResponse (default view)
            example:
                - description: A grizzled wizard with a penchant for mayhem and mead
                  experience: 91154
                  health: 1054
                  id: 123abc
                  name: Arvish the Wise
                - description: A grizzled wizard with a penchant for mayhem and mead
                  experience: 91154
                  health: 1054
                  id: 123abc
                  name: Arvish the Wise
                - description: A grizzled wizard with a penchant for mayhem and mead
                  experience: 91154
                  health: 1054
                  id: 123abc
                  name: Arvish the Wise
                - description: A grizzled wizard with a penchant for mayhem and mead
                  experience: 91154
                  health: 1054
                  id: 123abc
                  name: Arvish the Wise
        StoredItem:
            type: object
            properties:
                damage:
                    type: integer
                    description: Amount of damage the item can do
                    example: 143
                    minimum: 0
                    maximum: 200
                description:
                    type: string
                    description: Description of item
                    example: A magnificent sword which grants the bearer +2 wisdom
                    maxLength: 2000
                healing:
                    type: integer
                    description: Amount of healing the item can provide
                    example: 93
                    minimum: 0
                    maximum: 200
                id:
                    type: string
                    description: ID is the unique id of the item.
                    example: 123abc
                name:
                    type: string
                    description: Name of item
                    example: Sword of Wisdom
                    maxLength: 100
                protection:
                    type: integer
                    description: Amount of protection the item can provide
                    example: 4
                    minimum: 0
                    maximum: 20
            example:
                damage: 98
                description: A magnificent sword which grants the bearer +2 wisdom
                healing: 82
                id: 123abc
                name: Sword of Wisdom
                protection: 4
            required:
                - id
                - name
                - damage
                - healing
                - protection
        StoredItemCollection:
            type: array
            items:
                $ref: '#/components/schemas/StoredItem'
            example:
                - damage: 36
                  description: A magnificent sword which grants the bearer +2 wisdom
                  healing: 130
                  id: 123abc
                  name: Sword of Wisdom
                  protection: 15
                - damage: 36
                  description: A magnificent sword which grants the bearer +2 wisdom
                  healing: 130
                  id: 123abc
                  name: Sword of Wisdom
                  protection: 15
        StoredItemResponse:
            type: object
            properties:
                damage:
                    type: integer
                    description: Amount of damage the item can do
                    example: 171
                    minimum: 0
                    maximum: 200
                description:
                    type: string
                    description: Description of item
                    example: A magnificent sword which grants the bearer +2 wisdom
                    maxLength: 2000
                healing:
                    type: integer
                    description: Amount of healing the item can provide
                    example: 102
                    minimum: 0
                    maximum: 200
                id:
                    type: string
                    description: ID is the unique id of the item.
                    example: 123abc
                name:
                    type: string
                    description: Name of item
                    example: Sword of Wisdom
                    maxLength: 100
                protection:
                    type: integer
                    description: Amount of protection the item can provide
                    example: 7
                    minimum: 0
                    maximum: 20
            description: A StoredItem describes an item stored with an ID (default view)
            example:
                damage: 193
                description: A magnificent sword which grants the bearer +2 wisdom
                healing: 143
                id: 123abc
                name: Sword of Wisdom
                protection: 7
            required:
                - id
                - name
                - damage
                - healing
                - protection
        StoredItemResponseCollection:
            type: array
            items:
                $ref: '#/components/schemas/StoredItemResponse'
            description: ListResponseBody is the result type for an array of StoredItemResponse (default view)
            example:
                - damage: 165
                  description: A magnificent sword which grants the bearer +2 wisdom
                  healing: 11
                  id: 123abc
                  name: Sword of Wisdom
                  protection: 2
                - damage: 165
                  description: A magnificent sword which grants the bearer +2 wisdom
                  healing: 11
                  id: 123abc
                  name: Sword of Wisdom
                  protection: 2
                - damage: 165
                  description: A magnificent sword which grants the bearer +2 wisdom
                  healing: 11
                  id: 123abc
                  name: Sword of Wisdom
                  protection: 2
                - damage: 165
                  description: A magnificent sword which grants the bearer +2 wisdom
                  healing: 11
                  id: 123abc
                  name: Sword of Wisdom
                  protection: 2
        UpdateRequestBody:
            type: object
            properties:
                character:
                    $ref: '#/components/schemas/AddRequestBody'
            example:
                character:
                    description: A grizzled wizard with a penchant for mayhem and mead
                    experience: 26032
                    health: 786
                    name: Arvish the Wise
            required:
                - character
        UpdateRequestBody2:
            type: object
            properties:
                item:
                    $ref: '#/components/schemas/AddRequestBody3'
            example:
                item:
                    damage: 99
                    description: A magnificent sword which grants the bearer +2 wisdom
                    healing: 57
                    name: Sword of Wisdom
                    protection: 17
            required:
                - item
tags:
    - name: character
      description: The character service is the service for managing characters
    - name: inventory
      description: The inventory service is the service for managing character inventories
    - name: item
      description: The item service is the service for managing items
    - name: front
      description: The front service is the main HTTP API for the game
