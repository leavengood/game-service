// Code generated by goa v3.12.4, DO NOT EDIT.
//
// inventory HTTP client types
//
// Command:
// $ goa gen game-service/design

package client

import (
	inventory "game-service/gen/inventory"

	goa "goa.design/goa/v3/pkg"
)

// AddRequestBody is the type of the "inventory" service "add" endpoint HTTP
// request body.
type AddRequestBody struct {
	// ID of the character
	ID string `form:"id" json:"id" xml:"id"`
	// ID of the item
	ItemID string `form:"item_id" json:"item_id" xml:"item_id"`
}

// RemoveRequestBody is the type of the "inventory" service "remove" endpoint
// HTTP request body.
type RemoveRequestBody struct {
	// ID of the character
	ID string `form:"id" json:"id" xml:"id"`
	// ID of the item
	ItemID string `form:"item_id" json:"item_id" xml:"item_id"`
}

// ShowNotFoundResponseBody is the type of the "inventory" service "show"
// endpoint HTTP response body for the "not_found" error.
type ShowNotFoundResponseBody struct {
	// not found
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
	// ID of missing item
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// RemoveNotFoundResponseBody is the type of the "inventory" service "remove"
// endpoint HTTP response body for the "not_found" error.
type RemoveNotFoundResponseBody struct {
	// not found
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
	// ID of missing item
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// NewAddRequestBody builds the HTTP request body from the payload of the "add"
// endpoint of the "inventory" service.
func NewAddRequestBody(p *inventory.AddPayload) *AddRequestBody {
	body := &AddRequestBody{
		ID:     p.ID,
		ItemID: p.ItemID,
	}
	return body
}

// NewRemoveRequestBody builds the HTTP request body from the payload of the
// "remove" endpoint of the "inventory" service.
func NewRemoveRequestBody(p *inventory.RemovePayload) *RemoveRequestBody {
	body := &RemoveRequestBody{
		ID:     p.ID,
		ItemID: p.ItemID,
	}
	return body
}

// NewShowNotFound builds a inventory service show endpoint not_found error.
func NewShowNotFound(body *ShowNotFoundResponseBody) *inventory.NotFound {
	v := &inventory.NotFound{
		Message: *body.Message,
		ID:      *body.ID,
	}

	return v
}

// NewRemoveNotFound builds a inventory service remove endpoint not_found error.
func NewRemoveNotFound(body *RemoveNotFoundResponseBody) *inventory.NotFound {
	v := &inventory.NotFound{
		Message: *body.Message,
		ID:      *body.ID,
	}

	return v
}

// ValidateShowNotFoundResponseBody runs the validations defined on
// show_not_found_response_body
func ValidateShowNotFoundResponseBody(body *ShowNotFoundResponseBody) (err error) {
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	return
}

// ValidateRemoveNotFoundResponseBody runs the validations defined on
// remove_not_found_response_body
func ValidateRemoveNotFoundResponseBody(body *RemoveNotFoundResponseBody) (err error) {
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	return
}
