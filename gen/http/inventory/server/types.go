// Code generated by goa v3.12.4, DO NOT EDIT.
//
// inventory HTTP server types
//
// Command:
// $ goa gen game-service/design

package server

import (
	inventory "game-service/gen/inventory"

	goa "goa.design/goa/v3/pkg"
)

// AddRequestBody is the type of the "inventory" service "add" endpoint HTTP
// request body.
type AddRequestBody struct {
	// ID of the character
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// ID of the item
	ItemID *string `form:"item_id,omitempty" json:"item_id,omitempty" xml:"item_id,omitempty"`
}

// RemoveRequestBody is the type of the "inventory" service "remove" endpoint
// HTTP request body.
type RemoveRequestBody struct {
	// ID of the character
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// ID of the item
	ItemID *string `form:"item_id,omitempty" json:"item_id,omitempty" xml:"item_id,omitempty"`
}

// ShowNotFoundResponseBody is the type of the "inventory" service "show"
// endpoint HTTP response body for the "not_found" error.
type ShowNotFoundResponseBody struct {
	// not found
	Message string `form:"message" json:"message" xml:"message"`
	// ID of missing item
	ID string `form:"id" json:"id" xml:"id"`
}

// RemoveNotFoundResponseBody is the type of the "inventory" service "remove"
// endpoint HTTP response body for the "not_found" error.
type RemoveNotFoundResponseBody struct {
	// not found
	Message string `form:"message" json:"message" xml:"message"`
	// ID of missing item
	ID string `form:"id" json:"id" xml:"id"`
}

// NewShowNotFoundResponseBody builds the HTTP response body from the result of
// the "show" endpoint of the "inventory" service.
func NewShowNotFoundResponseBody(res *inventory.NotFound) *ShowNotFoundResponseBody {
	body := &ShowNotFoundResponseBody{
		Message: res.Message,
		ID:      res.ID,
	}
	return body
}

// NewRemoveNotFoundResponseBody builds the HTTP response body from the result
// of the "remove" endpoint of the "inventory" service.
func NewRemoveNotFoundResponseBody(res *inventory.NotFound) *RemoveNotFoundResponseBody {
	body := &RemoveNotFoundResponseBody{
		Message: res.Message,
		ID:      res.ID,
	}
	return body
}

// NewShowPayload builds a inventory service show endpoint payload.
func NewShowPayload(id string) *inventory.ShowPayload {
	v := &inventory.ShowPayload{}
	v.ID = id

	return v
}

// NewAddPayload builds a inventory service add endpoint payload.
func NewAddPayload(body *AddRequestBody) *inventory.AddPayload {
	v := &inventory.AddPayload{
		ID:     *body.ID,
		ItemID: *body.ItemID,
	}

	return v
}

// NewRemovePayload builds a inventory service remove endpoint payload.
func NewRemovePayload(body *RemoveRequestBody) *inventory.RemovePayload {
	v := &inventory.RemovePayload{
		ID:     *body.ID,
		ItemID: *body.ItemID,
	}

	return v
}

// ValidateAddRequestBody runs the validations defined on AddRequestBody
func ValidateAddRequestBody(body *AddRequestBody) (err error) {
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.ItemID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("item_id", "body"))
	}
	return
}

// ValidateRemoveRequestBody runs the validations defined on RemoveRequestBody
func ValidateRemoveRequestBody(body *RemoveRequestBody) (err error) {
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.ItemID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("item_id", "body"))
	}
	return
}
